@page "/product"

@using Syncfusion.Blazor.Navigations
@using ecommerce.Models.Product.Models
@using System.Net.Http.Json
@using System.Net.Http

<div class="container">
	<div class="row">
		<div class="col-md-12">
			@* @if (productList != null)
			{ *@
			<div class="control-container text-dark">
				<SfCarousel ButtonsVisibility="CarouselButtonVisibility.VisibleOnHover" AnimationEffect="CarouselAnimationEffect.Slide" AutoPlay="true" ShowIndicators="true">
					<ChildContent>
						@* @foreach (var product in productList)
						{ *@
						<CarouselItem>
							<figure class="img-container">
								<img src="~/download.jpg" style="width: 100%; height: 100%;" />
							</figure>
							<div class="d-flex justify-content-center">
								<div style="position:absolute;bottom:50px;">
									<div class="vstack gap-3 mb-3">
										<div>
											<p>
												<span style="font-family:impact; text-indent:2px;" class="text-dark fw-bold diplay-2">
													@* @product.ProductName *@
													@* <sup style="font-family:'Courier New'">
													<span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger" style="font-family:sans serif; ">
													@((product.ProductStock - 1) > 0 ? $"{product.ProductStock - 1}+" : product.ProductStock)
													<span class="visually-hidden">unread messages</span>
													</span>
													</sup> *@
												</span>
											</p>
										</div>
										<p class="text-muted fs-5 w-75" style="text-align:justify-all; font-family:Cambria">descrizione</p>
										@* 												<p class="text-muted fs-5 w-75" style="text-align:justify-all; font-family:Cambria">@(GetDescription(product.PrductDescription!))</p>
										*@
									</div>
									<div class="hstack gap-1 d-flex justify-content-center">
										<button class="btn btn-secondary fw-bold" id="styleButton"><i class="fa fa-list"></i> Details</button>
										<button class="btn btn-outline-danger fw-bold" id="styleButton"><i class="fa fa-cart-plus"></i> BUY NOW</button>
									</div>
								</div>
							</div>
						</CarouselItem>
						@* } *@
					</ChildContent>
					<PreviousButtonTemplate>
						<img src="" width="50" height="50" id="styleCursor" />
					</PreviousButtonTemplate>
					<NextButtonTemplate>
						<img src="" width="50" height="50" id="styleCursor" />
					</NextButtonTemplate>
					<IndicatorsTemplate>
						<div class="indicator"> </div>
					</IndicatorsTemplate>
				</SfCarousel>
			</div>
			@* }
			else
			{
			<div class="alert alert-info">No product available</div>
			} *@
		</div>
	</div>
</div>

<div class="container" style="background-color:black">
	<div class="row">
		<div class="col-md-12">
			<p>ciao</p>
		</div>
	</div>
</div>

<style>
	#styleCursor {
		cursor: pointer;
	}
</style>

@code {
	private Product[]? productList;

	// protected override async Task OnInitializedAsync()
	// {
	//     productList = await Http.GetFromJsonAsync<Product[]>("api/Product");
	// }

	string GetDescription(string description)
	{
		string appendDots = "...";
		int maxLength = 100;
		int descriptionLength = description.Length;
		return descriptionLength > maxLength ? $"{description.Substring(0, 100)}{appendDots}" : description;
	}
}
